library(tidyverse)
install.packages("tidyverse")
####load files####
baseline_1 <- read.table("E:\\Alamar Blue\\TGSH 2021_02_02\\TGSH_Baseline_1.txt", skip = 13, nrows = 8, fill = TRUE)
baseline_2 <- read.table("E:\\Alamar Blue\\TGSH 2021_02_02\\TGSH_Baseline_2.txt", skip = 13, nrows = 8, fill = TRUE)
after24h_1 <- read.table("E:\\Alamar Blue\\TGSH 2021_02_02\\TGSH_24h_1.txt", skip = 13, nrows = 8, fill = TRUE)
after24h_2 <- read.table("E:\\Alamar Blue\\TGSH 2021_02_02\\TGSH_24h_2.txt", skip = 13, nrows = 8, fill = TRUE)
#Remove last 3 columns and 7th row function
cleanup <- function(x) {
x <- x[, -c(10:12)]
x <- x[-7,]
return(x)
}
#turn into a list to lapply cleanup function on all objects
templist <- list(baseline_1, baseline_2, after24h_1, after24h_2)
templist2 <- lapply(templist, cleanup)
#extract list into dataframes
baseline_1 <- data.frame(templist2[1])
baseline_2 <- data.frame(templist2[2])
after24h_1 <- data.frame(templist2[3])
after24h_2 <- data.frame(templist2[4])
rm(templist, templist2) #remove templists
#convert to array and get the mean of each cell
#along is along the "3rd dimension", i.e. not along rows or columns
baseline_avg <- rowMeans(abind(baseline_1, baseline_2, along = 3), dims=2)
after24h_avg <- rowMeans(abind(after24h_1, after24h_2, along = 3), dims=2)
#convert back to df
baseline_avg <- as.data.frame(baseline_avg)
after24h_avg <- as.data.frame(after24h_avg)
rm(after24h_1, after24h_2, baseline_1, baseline_2) #remove old separated data
#seperate out data from control (i.e. final row) NOTE:Breaks if run multiple times...
baseline_avg_control <- baseline_avg[7,1:4]
baseline_avg_control <- t(baseline_avg_control)
baseline_avg <- baseline_avg[-7,]
after24h_avg_control <- after24h_avg[7,1:4]
after24h_avg_control <- t(after24h_avg_control)
after24h_avg <- after24h_avg[-7,]
####assign highest dose####
highestdose <- 1 #in mg/L
dose1 <- highestdose
dose2 <- highestdose/10
dose3 <- highestdose/100
dose4 <- highestdose/1000
dose5 <- highestdose/10000
dose6 <- 0
#formatting data into columns function
formatting <- function(x) {
value <- as.vector(t(x)) #transpose data into a vector
temp1 <- data.frame(value) #convert into a dataframe
#add doses, rep function repeats string, "each" is how often each value is repeated before going to the next one
temp1$dose <- rep(c(dose1, dose2, dose3, dose4, dose5, dose6), each = 9)
#add reps, rep function repeats string, "each" is how often each value is repeated before going to the next one
temp1$replicate <- rep(c("A", "B", "C"), each = 1)
return(temp1)
}
baseline <- formatting(baseline_avg)
after24h <- formatting(after24h_avg)
rm(after24h_avg, baseline_avg) #remove old dfs
####Need to know how to normalize data####
#test data
deltavalue <- after24h$value - baseline$value
temp1 <- as.data.frame(cbind(deltavalue))
temp1$dose <- rep(c(dose1, dose2, dose3, dose4, dose5, dose6), each = 9)
temp1$replicate <- rep(c("A", "B", "C"), each = 1)
rm(deltavalue)
####ANOVA####
#set factor levels from highest to lowest
temp1$dose <- ordered(temp1$dose,
levels = c(dose1, dose2, dose3, dose4, dose5, dose6))
#summary of data
group_by(temp1, dose) %>%
summarise(
count = n(),
mean = mean(deltavalue, na.rm = TRUE),
sd = sd(deltavalue, na.rm = TRUE)
)
group_by(temp1, replicate) %>%
summarise(
count = n(),
mean = mean(deltavalue, na.rm = TRUE),
sd = sd(deltavalue, na.rm = TRUE)
)
anovadose <- aov(deltavalue ~ dose, data = temp1)
summary(anovadose)
anovareps <- aov(deltavalue ~ replicate, data = temp1)
summary(anovareps)
library(tidyverse)
library(abind)
####load files####
baseline_1 <- read.table("E:\\Alamar Blue\\TGSH 2021_02_02\\TGSH_Baseline_1.txt", skip = 13, nrows = 8, fill = TRUE)
baseline_2 <- read.table("E:\\Alamar Blue\\TGSH 2021_02_02\\TGSH_Baseline_2.txt", skip = 13, nrows = 8, fill = TRUE)
after24h_1 <- read.table("E:\\Alamar Blue\\TGSH 2021_02_02\\TGSH_24h_1.txt", skip = 13, nrows = 8, fill = TRUE)
after24h_2 <- read.table("E:\\Alamar Blue\\TGSH 2021_02_02\\TGSH_24h_2.txt", skip = 13, nrows = 8, fill = TRUE)
#Remove last 3 columns and 7th row function
cleanup <- function(x) {
x <- x[, -c(10:12)]
x <- x[-7,]
return(x)
}
#turn into a list to lapply cleanup function on all objects
templist <- list(baseline_1, baseline_2, after24h_1, after24h_2)
templist2 <- lapply(templist, cleanup)
#extract list into dataframes
baseline_1 <- data.frame(templist2[1])
baseline_2 <- data.frame(templist2[2])
after24h_1 <- data.frame(templist2[3])
after24h_2 <- data.frame(templist2[4])
rm(templist, templist2) #remove templists
#convert to array and get the mean of each cell
#along is along the "3rd dimension", i.e. not along rows or columns
baseline_avg <- rowMeans(abind(baseline_1, baseline_2, along = 3), dims=2)
after24h_avg <- rowMeans(abind(after24h_1, after24h_2, along = 3), dims=2)
#convert back to df
baseline_avg <- as.data.frame(baseline_avg)
after24h_avg <- as.data.frame(after24h_avg)
rm(after24h_1, after24h_2, baseline_1, baseline_2) #remove old separated data
#seperate out data from control (i.e. final row) NOTE:Breaks if run multiple times...
baseline_avg_control <- baseline_avg[7,1:4]
baseline_avg_control <- t(baseline_avg_control)
baseline_avg <- baseline_avg[-7,]
after24h_avg_control <- after24h_avg[7,1:4]
after24h_avg_control <- t(after24h_avg_control)
after24h_avg <- after24h_avg[-7,]
####assign highest dose####
highestdose <- 1 #in mg/L
dose1 <- highestdose
dose2 <- highestdose/10
dose3 <- highestdose/100
dose4 <- highestdose/1000
dose5 <- highestdose/10000
dose6 <- 0
#formatting data into columns function
formatting <- function(x) {
value <- as.vector(t(x)) #transpose data into a vector
temp1 <- data.frame(value) #convert into a dataframe
#add doses, rep function repeats string, "each" is how often each value is repeated before going to the next one
temp1$dose <- rep(c(dose1, dose2, dose3, dose4, dose5, dose6), each = 9)
#add reps, rep function repeats string, "each" is how often each value is repeated before going to the next one
temp1$replicate <- rep(c("A", "B", "C"), each = 1)
return(temp1)
}
baseline <- formatting(baseline_avg)
after24h <- formatting(after24h_avg)
rm(after24h_avg, baseline_avg) #remove old dfs
####Need to know how to normalize data####
#test data
deltavalue <- after24h$value - baseline$value
temp1 <- as.data.frame(cbind(deltavalue))
temp1$dose <- rep(c(dose1, dose2, dose3, dose4, dose5, dose6), each = 9)
temp1$replicate <- rep(c("A", "B", "C"), each = 1)
rm(deltavalue)
####ANOVA####
#set factor levels from highest to lowest
temp1$dose <- ordered(temp1$dose,
levels = c(dose1, dose2, dose3, dose4, dose5, dose6))
#summary of data
group_by(temp1, dose) %>%
summarise(
count = n(),
mean = mean(deltavalue, na.rm = TRUE),
sd = sd(deltavalue, na.rm = TRUE)
)
group_by(temp1, replicate) %>%
summarise(
count = n(),
mean = mean(deltavalue, na.rm = TRUE),
sd = sd(deltavalue, na.rm = TRUE)
)
anovadose <- aov(deltavalue ~ dose, data = temp1)
summary(anovadose)
anovareps <- aov(deltavalue ~ replicate, data = temp1)
summary(anovareps)
library(dplyr)
library(ggplot2)
### FOLDERS, FILES AND FUNCTIONS
setwd("C:/Users/tyler/Desktop/MSc Thesis/Apical Data")
temp1 <- list.files(pattern = ".csv")
apicaldata <- lapply(temp1, read.csv)
rm(temp1)
chemnames <- gsub("\\.csv$", "", list.files(pattern = ".csv"))
names(apicaldata) <- chemnames
####ANOVA####
anova_output <- list()
for(i in 1:length(apicaldata)) {
temp2 <- aov(Dose..mg.L. ~ Survival.Rate, data = apicaldata[[i]])
anova_output[[i]] <- summary(temp2)
rm(temp2)
}
names(anova_output) <- chemnames
print(anova_output)
####Means and SD####
apicaldatasummary <- list()
for(i in 1:length(apicaldata)) {
temp2 <- apicaldata[[i]] %>% group_by(Dose..mg.L.) %>%
summarise("Survival Rate" = mean(Survival.Rate), SD = sd(Survival.Rate))
colnames(temp2) <- c("Dose(mg/L)", "Survival Rate", "SD")
apicaldatasummary[[i]] <- as.data.frame(temp2)
rm(temp2)
}
names(apicaldatasummary) <- chemnames
print(apicaldatasummary)
##################
for(i in 1:length(apicaldatasummary)) {
ggplot(as.data.frame(apicaldatasummary[[i]]), aes(x=`Dose(mg/L)`, y=`Survival Rate`)) +
geom_bar(stat="identity", color="black", fill="white",
position=position_dodge()) +
geom_errorbar(aes(ymin=`Fluorescence`-SD, ymax=`Fluorescence`+SD), width=.2,
position=position_dodge(.9)) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
labs(title="BPA")
}
i=1
ggplot(as.data.frame(apicaldatasummary[[i]]), aes(x=`Dose(mg/L)`, y=`Survival Rate`)) +
geom_bar(stat="identity", color="black", fill="white",
position=position_dodge()) +
geom_errorbar(aes(ymin=`Survival Rate`-SD, ymax=`Survival Rate`+SD), width=.2,
position=position_dodge(.9)) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
labs(title="BPA")
?as.factor
ggplot(as.data.frame(apicaldatasummary[[i]]), aes(x=log10(`Dose(mg/L)`), y=`Survival Rate`)) +
geom_bar(stat="identity", color="black", fill="white",
position=position_dodge()) +
geom_errorbar(aes(ymin=`Survival Rate`-SD, ymax=`Survival Rate`+SD), width=.2,
position=position_dodge(.9)) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
labs(title="BPA")
View(apicaldatasummary)
apicaldatasummary[[i]] %>%
as.data.frame() %>%
mutate("Dose(mg/L)" = as.factor("Dose(mg/L)")) %>%
ggplot(aes(x=`Dose(mg/L)`, y=`Survival Rate`)) +
geom_bar(stat="identity", color="black", fill="white",
position=position_dodge()) +
geom_errorbar(aes(ymin=`Survival Rate`-SD, ymax=`Survival Rate`+SD), width=.2,
position=position_dodge(.9)) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
labs(title="BPA")
as.data.frame(apicalsummary[[1]])
as.data.frame(apicaldatasummary[[1]])
####Means and SD####
apicaldatasummary <- list()
for(i in 1:length(apicaldata)) {
temp2 <- apicaldata[[i]] %>% group_by(Dose..mg.L.) %>%
summarise("Survival Rate" = mean(Survival.Rate), SD = sd(Survival.Rate))
colnames(temp2) <- c("Dose", "Survival Rate", "SD")
apicaldatasummary[[i]] <- as.data.frame(temp2)
rm(temp2)
}
names(apicaldatasummary) <- chemnames
print(apicaldatasummary)
apicaldatasummary <- list()
for(i in 1:length(apicaldata)) {
temp2 <- apicaldata[[i]] %>% group_by(Dose..mg.L.) %>%
summarise("Survival Rate" = mean(Survival.Rate), SD = sd(Survival.Rate))
colnames(temp2) <- c("Dose", "Survival_Rate", "SD")
apicaldatasummary[[i]] <- as.data.frame(temp2)
rm(temp2)
}
names(apicaldatasummary) <- chemnames
print(apicaldatasummary)
i=1
apicaldatasummary[[i]] %>%
as.data.frame() %>%
mutate(Dose = as.factor(Dose)) %>%
ggplot(aes(x=Dose, y=Survival_Rate)) +
geom_bar(stat="identity", color="black", fill="white",
position=position_dodge()) +
geom_errorbar(aes(ymin=Survival_Rate-SD, ymax=Survival_Rate+SD), width=.2,
position=position_dodge(.9)) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
labs(title="BPA")
names(apicaldatasummary)
for(i in 1:length(apicaldatasummary)) {
apicaldatasummary[[i]] %>%
as.data.frame() %>%
mutate(Dose = as.factor(Dose)) %>%
ggplot(aes(x=Dose, y=Survival_Rate)) +
geom_bar(stat="identity", color="black", fill="white",
position=position_dodge()) +
geom_errorbar(aes(ymin=Survival_Rate-SD, ymax=Survival_Rate+SD), width=.2,
position=position_dodge(.9)) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
labs(title=names(apicaldatasummary)[i])
}
for(i in 1:length(apicaldatasummary)) {
apicaldatasummary[[i]] %>%
as.data.frame() %>%
mutate(Dose = as.factor(Dose)) %>%
ggplot(aes(x=Dose, y=Survival_Rate)) +
geom_bar(stat="identity", color="black", fill="white",
position=position_dodge()) +
geom_errorbar(aes(ymin=Survival_Rate-SD, ymax=Survival_Rate+SD), width=.2,
position=position_dodge(.9)) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
labs(title=names(apicaldatasummary)[i]) %>%
print()
}
for(i in 1:length(apicaldatasummary)) {
p <- apicaldatasummary[[i]] %>%
as.data.frame() %>%
mutate(Dose = as.factor(Dose)) %>%
ggplot(aes(x=Dose, y=Survival_Rate)) +
geom_bar(stat="identity", color="black", fill="white",
position=position_dodge()) +
geom_errorbar(aes(ymin=Survival_Rate-SD, ymax=Survival_Rate+SD), width=.2,
position=position_dodge(.9)) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
labs(title=names(apicaldatasummary)[i])
print(p)
}
for(i in 1:length(apicaldatasummary)) {
p <- apicaldatasummary[[i]] %>%
as.data.frame() %>%
mutate(Dose = as.factor(Dose)) %>%
ggplot(aes(x=Dose, y=Survival_Rate)) +
geom_bar(stat="identity", color="black", fill="white",
position=position_dodge()) +
geom_errorbar(aes(ymin=Survival_Rate-SD, ymax=Survival_Rate+SD), width=.2,
position=position_dodge(.9)) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
labs(title=names(apicaldatasummary)[i]) +
xlab("Dose (mg/L") +
ylab("Survival Rate")
print(p)
}
library(dplyr)
library(ggplot2)
### FOLDERS, FILES AND FUNCTIONS
setwd("C:/Users/tyler/Desktop/MSc Thesis/Apical Data")
temp1 <- list.files(pattern = ".csv")
apicaldata <- lapply(temp1, read.csv)
rm(temp1)
chemnames <- gsub("\\.csv$", "", list.files(pattern = ".csv"))
names(apicaldata) <- chemnames
####ANOVA####
anova_output <- list()
for(i in 1:length(apicaldata)) {
temp2 <- aov(Dose..mg.L. ~ Survival.Rate, data = apicaldata[[i]])
anova_output[[i]] <- summary(temp2)
rm(temp2)
}
names(anova_output) <- chemnames
print(anova_output)
####Means and SD####
apicaldatasummary <- list()
for(i in 1:length(apicaldata)) {
temp2 <- apicaldata[[i]] %>% group_by(Dose..mg.L.) %>%
summarise("Survival Rate" = mean(Survival.Rate), SD = sd(Survival.Rate))
colnames(temp2) <- c("Dose", "Survival_Rate", "SD")
apicaldatasummary[[i]] <- as.data.frame(temp2)
rm(temp2)
}
names(apicaldatasummary) <- chemnames
print(apicaldatasummary)
##################
for(i in 1:length(apicaldatasummary)) {
p <- apicaldatasummary[[i]] %>%
as.data.frame() %>%
mutate(Dose = as.factor(Dose)) %>%
ggplot(aes(x=Dose, y=Survival_Rate)) +
geom_bar(stat="identity", color="black", fill="white",
position=position_dodge()) +
geom_errorbar(aes(ymin=Survival_Rate-SD, ymax=Survival_Rate+SD), width=.2,
position=position_dodge(.9)) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
labs(title=names(apicaldatasummary)[i]) +
xlab("Dose (mg/L)") +
ylab("Survival Rate")
print(p)
}
library(dplyr)
library(ggplot2)
### FOLDERS, FILES AND FUNCTIONS
setwd("C:/Users/tyler/Desktop/MSc Thesis/Apical Data")
temp1 <- list.files(pattern = ".csv")
apicaldata <- lapply(temp1, read.csv)
rm(temp1)
chemnames <- gsub("\\.csv$", "", list.files(pattern = ".csv"))
names(apicaldata) <- chemnames
####ANOVA####
anova_output <- list()
for(i in 1:length(apicaldata)) {
temp2 <- aov(Dose..mg.L. ~ Survival.Rate, data = apicaldata[[i]])
anova_output[[i]] <- summary(temp2)
rm(temp2)
}
names(anova_output) <- chemnames
print(anova_output)
####Means and SD####
apicaldatasummary <- list()
for(i in 1:length(apicaldata)) {
temp2 <- apicaldata[[i]] %>% group_by(Dose..mg.L.) %>%
summarise("Survival Rate" = mean(Survival.Rate), SD = sd(Survival.Rate))
colnames(temp2) <- c("Dose", "Survival_Rate", "SD")
apicaldatasummary[[i]] <- as.data.frame(temp2)
rm(temp2)
}
names(apicaldatasummary) <- chemnames
print(apicaldatasummary)
##################
for(i in 1:length(apicaldatasummary)) {
p <- apicaldatasummary[[i]] %>%
as.data.frame() %>%
mutate(Dose = as.factor(Dose)) %>%
ggplot(aes(x=Dose, y=Survival_Rate)) +
geom_bar(stat="identity", color="black", fill="white",
position=position_dodge()) +
geom_errorbar(aes(ymin=Survival_Rate-SD, ymax=Survival_Rate+SD), width=.2,
position=position_dodge(.9)) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
labs(title=names(apicaldatasummary)[i]) +
xlab("Dose (mg/L)") +
ylab("Survival Rate")
print(p)
}
View(p)
for(i in 1:length(apicaldatasummary)) {
p <- apicaldatasummary[[i]] %>%
as.data.frame() %>%
mutate(Dose = as.factor(Dose)) %>%
ggplot(aes(x=Dose, y=Survival_Rate)) +
geom_bar(stat="identity", color="black", fill="white",
position=position_dodge()) +
geom_errorbar(aes(ymin=Survival_Rate-SD, ymax=Survival_Rate+SD), width=.2,
position=position_dodge(.9)) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
labs(title=names(apicaldatasummary)[i]) +
xlab("Dose (mg/L)") +
ylab("Survival Rate")
print(p)
rm(p)
}

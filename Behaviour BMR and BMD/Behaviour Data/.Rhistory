## must separate out each light/dark phase and generate a median for each phase
auc_list <- split(auc_norm, auc_norm$endpoint)
for(i in 1:length(auc_list)) {
temp1 <- auc_list[[i]][1:9, 5] %>% unlist() %>% median()
auc_list[[i]]$control_median = temp1
remove(temp1)
}
## rebind separated data and finish norm - "(Vchemical – Vvehicle control) * 100"
auc_norm<- bind_rows(auc_list) %>%
mutate(endpoint_value_norm2  = (endpoint_value_norm - control_median)*100) %>%
select(-endpoint_value_norm) %>%
rename(endpoint_value_norm = endpoint_value_norm2)
auc_plot <- auc_norm %>%
mutate(phase = if_else(endpoint %in% c("a", "c", "e"), "Dark", "Light")) %>%
ggplot(aes(x = dose, y = endpoint_value_norm)) +
geom_boxplot(outlier.shape = NA) +
geom_jitter(width = 0.1, height = 0, aes(color = embryo_id, shape = phase))
print(auc_plot)
## normalize similarity scores - "(Vchemical/Vvehicle control) * 100 – 100"
simi_norm <- simi_norm %>%
mutate(control_median = median(simi_norm[46:54, 5])) %>%
mutate(endpoint_value_norm = (endpoint_value/control_median)*100-100) %>%
select(-c(endpoint_value, control_median)) %>%
mutate(dose = substr(embryo_id, 1, nchar(embryo_id)-2)) %>%
select(-embryo_id)
simi_plot <- simi_norm %>%
ggplot(aes(x = dose, y = endpoint_value_norm)) +
geom_boxplot(outlier.shape = NA) +
geom_jitter(width = 0.1, height = 0, colour = "blue")
print(simi_plot)
write.table(auc_norm, file = paste0(ChemicalName,"/",ChemicalName,"_auc_norm.txt"))
write.table(simi_norm, file = paste0(ChemicalName,"/",ChemicalName,"_simi_norm.txt"))
out_curvep <- combi_run_rcurvep(combined_data, TRSH = 30, keep_sets = "act_set", n_samples = 1)  # using Curvep with BMR = 30
out_fit <- run_fit(combined_data)
auc_prep <- auc_norm %>%
filter(is_VC == FALSE) %>%
mutate(conc = rep(c(HighDose:LowDose), each=9, length.out = 270)) %>%
mutate(totaldist = "_totaldist") %>%
mutate(endpoint2 = paste(endpoint, totaldist)) %>%
select(
-is_VC,
-endpoint,
-dose,
-control_median,
-totaldist,
-embryo_id
) %>%
rename(
resp = endpoint_value_norm,
chemical = plate_id,
endpoint = endpoint2,
)
simi_prep <- simi_norm %>%
rename(
resp = endpoint_value_norm,
chemical = plate_id,
) %>%
filter(is_VC == 0) %>%
mutate(conc = rep(c(HighDose:LowDose), each=9)) %>%
select(-dose, -is_VC)
combined_data <- bind_rows(auc_prep, simi_prep)
write.table(combined_data, file = paste0(ChemicalName,"/","combined_data_",ChemicalName,".txt"))
out_curvep <- combi_run_rcurvep(combined_data, TRSH = 30, keep_sets = "act_set", n_samples = 1)  # using Curvep with BMR = 30
out_fit <- run_fit(combined_data)
View(out_curvep)
View(out_curvep[["result"]][["act_set"]])
View(out_fit)
View(combi_run_rcurvep(zfishbeh, keep_sets = "act_set", TRSH = 30)[["result"]][["act_set"]])
View(auc_prep)
View(patd_one)
print(c(10^HighDose))
print(c(10^(c(HighDose:LowDose))))
auc_prep <- auc_norm %>%
filter(is_VC == FALSE) %>%
mutate(conc = rep(c(10^(c(HighDose:LowDose))), each=9, length.out = 270)) %>%
mutate(totaldist = "_totaldist") %>%
mutate(endpoint2 = paste(endpoint, totaldist)) %>%
select(
-is_VC,
-endpoint,
-dose,
-control_median,
-totaldist,
-embryo_id
) %>%
rename(
resp = endpoint_value_norm,
chemical = plate_id,
endpoint = endpoint2,
)
simi_prep <- simi_norm %>%
rename(
resp = endpoint_value_norm,
chemical = plate_id,
) %>%
filter(is_VC == 0) %>%
mutate(conc = rep(c(HighDose:LowDose), each=9)) %>%
select(-dose, -is_VC)
combined_data <- bind_rows(auc_prep, simi_prep)
write.table(combined_data, file = paste0(ChemicalName,"/","combined_data_",ChemicalName,".txt"))
out_curvep <- combi_run_rcurvep(combined_data, TRSH = 30, keep_sets = "act_set", n_samples = 1)  # using Curvep with BMR = 30
out_fit <- run_fit(combined_data)
View(out_curvep)
View(out_curvep[["result"]][["act_set"]])
auc_prep <- auc_norm %>%
filter(is_VC == FALSE) %>%
mutate(conc = rep(c(10^(c(HighDose:LowDose))), each=9, length.out = 270)) %>%
mutate(totaldist = "_totaldist") %>%
mutate(endpoint2 = paste(endpoint, totaldist)) %>%
select(
-is_VC,
-endpoint,
-dose,
-control_median,
-totaldist,
-embryo_id
) %>%
rename(
resp = endpoint_value_norm,
chemical = plate_id,
endpoint = endpoint2,
)
simi_prep <- simi_norm %>%
rename(
resp = endpoint_value_norm,
chemical = plate_id,
) %>%
filter(is_VC == 0) %>%
mutate(conc = rep(c(10^(c(HighDose:LowDose))), each=9)) %>%
select(-dose, -is_VC)
combined_data <- bind_rows(auc_prep, simi_prep)
write.table(combined_data, file = paste0(ChemicalName,"/","combined_data_",ChemicalName,".txt"))
out_curvep <- combi_run_rcurvep(combined_data, TRSH = 30, keep_sets = "act_set", n_samples = 1)  # using Curvep with BMR = 30
out_fit <- run_fit(combined_data)
View(out_curvep)
View(out_curvep[["result"]][["act_set"]])
View(auc_prep)
View(out_fit)
View(out_fit[["result"]][["fit_set"]])
?geom_function
zfishbeh
zfishdev_act
?zfishdev_act
View(out_curvep)
out_bmr <- estimate_dataset_bmr(out_curvep)
browseVignettes(package = "Rcurvep")
browseVignettes(package = "Rcurvep")
browseVignettes(package = "Rcurvep")
out_curvep <- combi_run_rcurvep(combined_data, keep_sets = "act_set", n_samples = 1)  # using Curvep with BMR = 30
out_curvep_2 <- combi_run_rcurvep(combined_data, TRSH = seq(5,95, by = 5), keep_sets = "act_set", n_samples = 1)
View(out_curvep_2)
out_bmr <- estimate_dataset_bmr(out_curvep_2)
# out_curvep <- combi_run_rcurvep(combined_data, TRSH = 30, keep_sets = "act_set", n_samples = 1)  # using Curvep with BMR = 30
# out_fit <- run_fit(combined_data)
out_curvep_2 <-
combi_run_rcurvep(
combined_data,
TRSH = seq(5, 95, by = 5),
)
out_bmr <- estimate_dataset_bmr(out_curvep_2)
# out_curvep <- combi_run_rcurvep(combined_data, TRSH = 30, keep_sets = "act_set", n_samples = 1)  # using Curvep with BMR = 30
# out_fit <- run_fit(combined_data)
out_curvep_2 <-
combi_run_rcurvep(
combined_data,
TRSH = seq(5, 95, by = 5),
n_samples = 1
)
out_bmr <- estimate_dataset_bmr(out_curvep_2)
zfishdev_all
View(combined_data)
View(out_curvep_2)
library(here)
library(tidyverse)
library(rlang)
library(Rcurvep)
source("cal_auc_simi_endpoints.R")
ChemicalName <- "BPA"
#Log10, ug/L
HighDose <- 3
LowDose <- HighDose-4
temp1 <- read.table(paste0(ChemicalName,".txt"), header = TRUE)
saveRDS(temp1, file = paste0(ChemicalName,"/",ChemicalName,".rds"))
remove(temp1)
patd <- readRDS(paste0(ChemicalName,"/",ChemicalName,".rds"))
patd_one <- patd %>%
filter(plate_id == paste0(ChemicalName))
auc_endps <-
list(
a = seq(1, 5, by = 1),
b = seq(6, 10, by = 1),
c = seq(11, 15, by = 1),
d = seq(16, 20, by = 1),
e = seq(21, 25, by = 1),
f = seq(26, 30, by = 1)
)
auc_one <- create_auc_endpoints(patd_one, segments = auc_endps)
auc_all <- create_auc_endpoints(patd, segments = auc_endps)
simi_endps <- list("ld_pearson" = seq(1, 20, by = 1))
simi_one <- create_simi_endpoints(patd_one, segments = simi_endps, metric = "pearson")
simi_all <- create_simi_endpoints(patd, segments = simi_endps, metric = "pearson")
write.table(auc_one, file = paste0(ChemicalName,"/",ChemicalName,"_auc.txt"))
write.table(simi_one[[1]], file = paste0(ChemicalName,"/",ChemicalName,"_simi.txt"))
auc_norm <- auc_one[[1]]
simi_norm <- simi_one[[1]]
## first part of auc norm "log10(AUC+1) function (+1 to avoid infinite values with an AUC of 0)"
auc_norm <- auc_norm %>%
mutate(endpoint_value_norm = log10(endpoint_value + 1)) %>%
select(-endpoint_value) %>%
mutate(dose = substr(embryo_id, 1, nchar(embryo_id)-2)) %>%
mutate(embryo_id = substr(embryo_id, nchar(embryo_id)-1+1, nchar(embryo_id)))
## must separate out each light/dark phase and generate a median for each phase
auc_list <- split(auc_norm, auc_norm$endpoint)
for(i in 1:length(auc_list)) {
temp1 <- auc_list[[i]][1:9, 5] %>% unlist() %>% median()
auc_list[[i]]$control_median = temp1
remove(temp1)
}
## rebind separated data and finish norm - "(Vchemical – Vvehicle control) * 100"
auc_norm<- bind_rows(auc_list) %>%
mutate(endpoint_value_norm2  = (endpoint_value_norm - control_median)*100) %>%
select(-endpoint_value_norm) %>%
rename(endpoint_value_norm = endpoint_value_norm2)
auc_plot <- auc_norm %>%
mutate(phase = if_else(endpoint %in% c("a", "c", "e"), "Dark", "Light")) %>%
ggplot(aes(x = dose, y = endpoint_value_norm)) +
geom_boxplot(outlier.shape = NA) +
geom_jitter(width = 0.1, height = 0, aes(color = embryo_id, shape = phase))
print(auc_plot)
## normalize similarity scores - "(Vchemical/Vvehicle control) * 100 – 100"
simi_norm <- simi_norm %>%
mutate(control_median = median(simi_norm[46:54, 5])) %>%
mutate(endpoint_value_norm = (endpoint_value/control_median)*100-100) %>%
select(-c(endpoint_value, control_median)) %>%
mutate(dose = substr(embryo_id, 1, nchar(embryo_id)-2)) %>%
select(-embryo_id)
simi_plot <- simi_norm %>%
ggplot(aes(x = dose, y = endpoint_value_norm)) +
geom_boxplot(outlier.shape = NA) +
geom_jitter(width = 0.1, height = 0, colour = "blue")
print(simi_plot)
write.table(auc_norm, file = paste0(ChemicalName,"/",ChemicalName,"_auc_norm.txt"))
write.table(simi_norm, file = paste0(ChemicalName,"/",ChemicalName,"_simi_norm.txt"))
auc_prep <- auc_norm %>%
filter(is_VC == FALSE) %>%
mutate(conc = rep(c(10^(c(HighDose:LowDose))), each=9, length.out = 270)) %>%
mutate(totaldist = "_totaldist") %>%
mutate(endpoint2 = paste(endpoint, totaldist)) %>%
select(
-is_VC,
-endpoint,
-dose,
-control_median,
-totaldist,
-embryo_id
) %>%
rename(
resp = endpoint_value_norm,
chemical = plate_id,
endpoint = endpoint2,
)
simi_prep <- simi_norm %>%
rename(
resp = endpoint_value_norm,
chemical = plate_id,
) %>%
filter(is_VC == 0) %>%
mutate(conc = rep(c(10^(c(HighDose:LowDose))), each=9)) %>%
select(-dose, -is_VC)
combined_data <- bind_rows(auc_prep, simi_prep)
write.table(combined_data, file = paste0(ChemicalName,"/","combined_data_",ChemicalName,".txt"))
library(here)
library(tidyverse)
library(rlang)
library(Rcurvep)
source("cal_auc_simi_endpoints.R")
ChemicalName <- "BPA"
#Log10, ug/L
HighDose <- 3
LowDose <- HighDose-4
temp1 <- read.table(paste0(ChemicalName,".txt"), header = TRUE)
saveRDS(temp1, file = paste0(ChemicalName,"/",ChemicalName,".rds"))
remove(temp1)
patd <- readRDS(paste0(ChemicalName,"/",ChemicalName,".rds"))
patd_one <- patd %>%
filter(plate_id == paste0(ChemicalName))
auc_endps <-
list(
a = seq(1, 5, by = 1),
b = seq(6, 10, by = 1),
c = seq(11, 15, by = 1),
d = seq(16, 20, by = 1),
e = seq(21, 25, by = 1),
f = seq(26, 30, by = 1)
)
auc_one <- create_auc_endpoints(patd_one, segments = auc_endps)
auc_all <- create_auc_endpoints(patd, segments = auc_endps)
simi_endps <- list("ld_pearson" = seq(1, 20, by = 1))
simi_one <- create_simi_endpoints(patd_one, segments = simi_endps, metric = "pearson")
simi_all <- create_simi_endpoints(patd, segments = simi_endps, metric = "pearson")
write.table(auc_one, file = paste0(ChemicalName,"/",ChemicalName,"_auc.txt"))
write.table(simi_one[[1]], file = paste0(ChemicalName,"/",ChemicalName,"_simi.txt"))
auc_norm <- auc_one[[1]]
simi_norm <- simi_one[[1]]
## first part of auc norm "log10(AUC+1) function (+1 to avoid infinite values with an AUC of 0)"
auc_norm <- auc_norm %>%
mutate(endpoint_value_norm = log10(endpoint_value + 1)) %>%
select(-endpoint_value) %>%
mutate(dose = substr(embryo_id, 1, nchar(embryo_id)-2)) %>%
mutate(embryo_id = substr(embryo_id, nchar(embryo_id)-1+1, nchar(embryo_id)))
## must separate out each light/dark phase and generate a median for each phase
auc_list <- split(auc_norm, auc_norm$endpoint)
for(i in 1:length(auc_list)) {
temp1 <- auc_list[[i]][1:9, 5] %>% unlist() %>% median()
auc_list[[i]]$control_median = temp1
remove(temp1)
}
## rebind separated data and finish norm - "(Vchemical – Vvehicle control) * 100"
auc_norm<- bind_rows(auc_list) %>%
mutate(endpoint_value_norm2  = (endpoint_value_norm - control_median)*100) %>%
select(-endpoint_value_norm) %>%
rename(endpoint_value_norm = endpoint_value_norm2)
auc_plot <- auc_norm %>%
mutate(phase = if_else(endpoint %in% c("a", "c", "e"), "Dark", "Light")) %>%
ggplot(aes(x = dose, y = endpoint_value_norm)) +
geom_boxplot(outlier.shape = NA) +
geom_jitter(width = 0.1, height = 0, aes(color = embryo_id, shape = phase))
print(auc_plot)
## normalize similarity scores - "(Vchemical/Vvehicle control) * 100 – 100"
simi_norm <- simi_norm %>%
mutate(control_median = median(simi_norm[46:54, 5])) %>%
mutate(endpoint_value_norm = (endpoint_value/control_median)*100-100) %>%
select(-c(endpoint_value, control_median)) %>%
mutate(dose = substr(embryo_id, 1, nchar(embryo_id)-2)) %>%
select(-embryo_id)
simi_plot <- simi_norm %>%
ggplot(aes(x = dose, y = endpoint_value_norm)) +
geom_boxplot(outlier.shape = NA) +
geom_jitter(width = 0.1, height = 0, colour = "blue")
print(simi_plot)
write.table(auc_norm, file = paste0(ChemicalName,"/",ChemicalName,"_auc_norm.txt"))
write.table(simi_norm, file = paste0(ChemicalName,"/",ChemicalName,"_simi_norm.txt"))
auc_prep <- auc_norm %>%
filter(is_VC == FALSE) %>%
mutate(conc = rep(c(10^(c(HighDose:LowDose))), each=9, length.out = 270)) %>%
mutate(totaldist = "_totaldist") %>%
mutate(endpoint2 = paste(endpoint, totaldist)) %>%
select(
-is_VC,
-endpoint,
-dose,
-control_median,
-totaldist,
-embryo_id
) %>%
rename(
resp = endpoint_value_norm,
chemical = plate_id,
endpoint = endpoint2,
)
simi_prep <- simi_norm %>%
rename(
resp = endpoint_value_norm,
chemical = plate_id,
) %>%
filter(is_VC == 0) %>%
mutate(conc = rep(c(10^(c(HighDose:LowDose))), each=9)) %>%
select(-dose, -is_VC)
combined_data <- bind_rows(auc_prep, simi_prep)
write.table(combined_data, file = paste0(ChemicalName,"/","combined_data_",ChemicalName,".txt"))
# out_curvep <- combi_run_rcurvep(combined_data, TRSH = 30, keep_sets = "act_set", n_samples = 1)  # using Curvep with BMR = 30
# out_fit <- run_fit(combined_data)
out_curvep_2 <-
combi_run_rcurvep(
combined_data,
TRSH = seq(5, 95, by = 5),
n_samples = 1
)
out_bmr <- estimate_dataset_bmr(out_curvep_2)
View(out_curvep_2)
View(out_curvep_2[["result"]][["act_set"]])
library(here)
library(tidyverse)
library(rlang)
library(Rcurvep)
source("cal_auc_simi_endpoints.R")
ChemicalName <- "BPAF"
#Log10, ug/L
HighDose <- 3
LowDose <- HighDose-4
temp1 <- read.table(paste0(ChemicalName,".txt"), header = TRUE)
saveRDS(temp1, file = paste0(ChemicalName,"/",ChemicalName,".rds"))
remove(temp1)
patd <- readRDS(paste0(ChemicalName,"/",ChemicalName,".rds"))
patd_one <- patd %>%
filter(plate_id == paste0(ChemicalName))
auc_endps <-
list(
a = seq(1, 5, by = 1),
b = seq(6, 10, by = 1),
c = seq(11, 15, by = 1),
d = seq(16, 20, by = 1),
e = seq(21, 25, by = 1),
f = seq(26, 30, by = 1)
)
auc_one <- create_auc_endpoints(patd_one, segments = auc_endps)
auc_all <- create_auc_endpoints(patd, segments = auc_endps)
simi_endps <- list("ld_pearson" = seq(1, 20, by = 1))
simi_one <- create_simi_endpoints(patd_one, segments = simi_endps, metric = "pearson")
simi_all <- create_simi_endpoints(patd, segments = simi_endps, metric = "pearson")
write.table(auc_one, file = paste0(ChemicalName,"/",ChemicalName,"_auc.txt"))
write.table(simi_one[[1]], file = paste0(ChemicalName,"/",ChemicalName,"_simi.txt"))
auc_norm <- auc_one[[1]]
simi_norm <- simi_one[[1]]
## first part of auc norm "log10(AUC+1) function (+1 to avoid infinite values with an AUC of 0)"
auc_norm <- auc_norm %>%
mutate(endpoint_value_norm = log10(endpoint_value + 1)) %>%
select(-endpoint_value) %>%
mutate(dose = substr(embryo_id, 1, nchar(embryo_id)-2)) %>%
mutate(embryo_id = substr(embryo_id, nchar(embryo_id)-1+1, nchar(embryo_id)))
## must separate out each light/dark phase and generate a median for each phase
auc_list <- split(auc_norm, auc_norm$endpoint)
for(i in 1:length(auc_list)) {
temp1 <- auc_list[[i]][1:9, 5] %>% unlist() %>% median()
auc_list[[i]]$control_median = temp1
remove(temp1)
}
## rebind separated data and finish norm - "(Vchemical – Vvehicle control) * 100"
auc_norm<- bind_rows(auc_list) %>%
mutate(endpoint_value_norm2  = (endpoint_value_norm - control_median)*100) %>%
select(-endpoint_value_norm) %>%
rename(endpoint_value_norm = endpoint_value_norm2)
auc_plot <- auc_norm %>%
mutate(phase = if_else(endpoint %in% c("a", "c", "e"), "Dark", "Light")) %>%
ggplot(aes(x = dose, y = endpoint_value_norm)) +
geom_boxplot(outlier.shape = NA) +
geom_jitter(width = 0.1, height = 0, aes(color = embryo_id, shape = phase))
print(auc_plot)
## normalize similarity scores - "(Vchemical/Vvehicle control) * 100 – 100"
simi_norm <- simi_norm %>%
mutate(control_median = median(simi_norm[46:54, 5])) %>%
mutate(endpoint_value_norm = (endpoint_value/control_median)*100-100) %>%
select(-c(endpoint_value, control_median)) %>%
mutate(dose = substr(embryo_id, 1, nchar(embryo_id)-2)) %>%
select(-embryo_id)
simi_plot <- simi_norm %>%
ggplot(aes(x = dose, y = endpoint_value_norm)) +
geom_boxplot(outlier.shape = NA) +
geom_jitter(width = 0.1, height = 0, colour = "blue")
print(simi_plot)
write.table(auc_norm, file = paste0(ChemicalName,"/",ChemicalName,"_auc_norm.txt"))
write.table(simi_norm, file = paste0(ChemicalName,"/",ChemicalName,"_simi_norm.txt"))
auc_prep <- auc_norm %>%
filter(is_VC == FALSE) %>%
mutate(conc = rep(c(10^(c(HighDose:LowDose))), each=9, length.out = 270)) %>%
mutate(totaldist = "_totaldist") %>%
mutate(endpoint2 = paste(endpoint, totaldist)) %>%
select(
-is_VC,
-endpoint,
-dose,
-control_median,
-totaldist,
-embryo_id
) %>%
rename(
resp = endpoint_value_norm,
chemical = plate_id,
endpoint = endpoint2,
)
simi_prep <- simi_norm %>%
rename(
resp = endpoint_value_norm,
chemical = plate_id,
) %>%
filter(is_VC == 0) %>%
mutate(conc = rep(c(10^(c(HighDose:LowDose))), each=9)) %>%
select(-dose, -is_VC)
combined_data <- bind_rows(auc_prep, simi_prep)
write.table(combined_data, file = paste0(ChemicalName,"/","combined_data_",ChemicalName,".txt"))
# out_curvep <- combi_run_rcurvep(combined_data, TRSH = 30, keep_sets = "act_set", n_samples = 1)  # using Curvep with BMR = 30
# out_fit <- run_fit(combined_data)
out_curvep_2 <-
combi_run_rcurvep(
combined_data,
TRSH = seq(5, 95, by = 5),
n_samples = 1
)
out_bmr <- estimate_dataset_bmr(out_curvep_2)
View(out_curvep_2)
View(out_curvep_2[["result"]][["act_set"]])
View(out_curvep_2)
View(out_curvep_2[["result"]][["act_set"]])
test <- estimate_dataset_bmr(combi_run_rcurvep(
combined_data,
n_samples = 100,
keep_sets = c("act_set"),
TRSH = seq(5, 95, by = 5), # test all candidates, 5 to 95
RNGE = 1000000,
CARR = 20
), plot = TRUE)
View(test)
test$outcome
test <- estimate_dataset_bmr(combi_run_rcurvep(
combined_data,
n_samples = 100,
keep_sets = c("act_set"),
TRSH = seq(5, 95, by = 5) # test all candidates, 5 to 95
), plot = TRUE)
test$outcome
View(test)
View(test[["outcome"]])

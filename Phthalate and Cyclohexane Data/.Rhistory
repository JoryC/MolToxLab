####Adjust row and col names####
##Set gene col as row names
for(i in 1:length(raw_data)) {
raw_data[[i]] <- raw_data[[i]] %>%
reduce(left_join, by = "gene") %>%
remove_rownames() %>%
column_to_rownames("gene")
}
##Clean up col names
for(i in 1:length(raw_data)) {
temp <- gsub(pattern = "-GQReadsPerGene.out.tab",
replacement = "",
x = names(raw_data[[i]]),
fixed = TRUE)
colnames(raw_data[[i]]) <- temp
remove(temp)
}
####Median Filtering####
##set threshold - For no median filtering, median_thrs <- 0
median_thrs <- 5
##Remove genes that do not meet median threshold
raw_data_median_filtered <- list()
for(i in chemnames) {
raw_data_median_filtered[[i]] <- raw_data[[i]] %>%
mutate(count_median = apply(raw_data[[i]], 1, median)) %>%
filter(count_median >= median_thrs) %>%
select(-count_median)
}
####Combined all the data together####
for(i in 1:length(raw_data_median_filtered)) {
raw_data_median_filtered[[i]] <- raw_data_median_filtered[[i]] %>%
rownames_to_column("gene")
}
my_merge <- function(df1, df2) {
merge(df1, df2, by = "gene", all = TRUE)
}
combined_data_median_filtered <- Reduce(my_merge, raw_data_median_filtered) %>%
remove_rownames() %>%
column_to_rownames("gene")
combined_data_median_filtered[is.na(combined_data_median_filtered)] <- 0
View(combined_data_median_filtered)
####Libraries####
library(tidyverse)
library(edgeR)
library(preprocessCore) # for quantile normalization
library(PMCMRplus)  # for Williams Trend Test
library(purrr)
library(ggfortify)
####Import metadata####
metadata <- read.csv("metadata.csv")
colnames(metadata) <- c("Chemical","10-1","10-2","10-3","10-4","10-5","3uM","Control")
chemnames <- metadata[1:6,1]
doses <- colnames(metadata[,2:8])
####Grouping####
##Chemical Groups
chemgroups <- c()
for(i in 1:length(chemnames)) {
temp1 <- rowSums(metadata[i,2:8])
temp2 <- rep(chemnames[i], temp1)
chemgroups <- c(chemgroups, temp2)
remove(temp1, temp2)
}
##Dose Groups
dosegroups <- c()
for(i in 1:length(chemnames)) {
temp1 <- as.numeric(metadata[i,2:8])
temp2 <- rep(doses, temp1)
dosegroups <- c(dosegroups, temp2)
remove(temp1, temp2)
}
##Dose and Chemical Groups Combined
dosechemgroups <- paste(chemgroups, dosegroups, sep = "-")
####Data Import####
raw_data <- list ()
for(i in chemnames) {
filenames <- list.files(paste0(i))
for(j in filenames){
raw_data[[i]][[j]] <- read.table(paste0(i,"/",j),
header = FALSE,
stringsAsFactors = FALSE,
sep = "\t",
strip.white = TRUE) [-c(1:4),-c(2:3)]
colnames(raw_data[[i]][[j]]) <- c("gene", j)
}
}
####Adjust row and col names####
##Set gene col as row names
for(i in 1:length(raw_data)) {
raw_data[[i]] <- raw_data[[i]] %>%
reduce(left_join, by = "gene") %>%
remove_rownames() %>%
column_to_rownames("gene")
}
##Clean up col names
for(i in 1:length(raw_data)) {
temp <- gsub(pattern = "-GQReadsPerGene.out.tab",
replacement = "",
x = names(raw_data[[i]]),
fixed = TRUE)
colnames(raw_data[[i]]) <- temp
remove(temp)
}
####Combined all the data together####
for(i in 1:length(raw_data)) {
raw_data[[i]] <- raw_data[[i]] %>%
rownames_to_column("gene")
}
my_merge <- function(df1, df2) {
merge(df1, df2, by = "gene", all = TRUE)
}
combined_raw_data <- Reduce(my_merge, raw_data) %>%
remove_rownames() %>%
column_to_rownames("gene")
View(combined_raw_data)
?group_by
test1 <- t(combined_raw_data)
View(test1)
####Libraries####
library(tidyverse)
library(edgeR)
library(preprocessCore) # for quantile normalization
library(PMCMRplus)  # for Williams Trend Test
library(purrr)
library(ggfortify)
####Import metadata####
metadata <- read.csv("metadata.csv")
colnames(metadata) <- c("Chemical","10-1","10-2","10-3","10-4","10-5","3uM","Control")
chemnames <- metadata[1:6,1]
doses <- colnames(metadata[,2:8])
####Grouping####
##Chemical Groups
chemgroups <- c()
for(i in 1:length(chemnames)) {
temp1 <- rowSums(metadata[i,2:8])
temp2 <- rep(chemnames[i], temp1)
chemgroups <- c(chemgroups, temp2)
remove(temp1, temp2)
}
##Dose Groups
dosegroups <- c()
for(i in 1:length(chemnames)) {
temp1 <- as.numeric(metadata[i,2:8])
temp2 <- rep(doses, temp1)
dosegroups <- c(dosegroups, temp2)
remove(temp1, temp2)
}
##Dose and Chemical Groups Combined
chemdosegroups <- paste(chemgroups, dosegroups, sep = "-")
####Data Import####
raw_data <- list ()
for(i in chemnames) {
filenames <- list.files(paste0(i))
for(j in filenames){
raw_data[[i]][[j]] <- read.table(paste0(i,"/",j),
header = FALSE,
stringsAsFactors = FALSE,
sep = "\t",
strip.white = TRUE) [-c(1:4),-c(2:3)]
colnames(raw_data[[i]][[j]]) <- c("gene", j)
}
}
####Adjust row and col names####
##Set gene col as row names
for(i in 1:length(raw_data)) {
raw_data[[i]] <- raw_data[[i]] %>%
reduce(left_join, by = "gene") %>%
remove_rownames() %>%
column_to_rownames("gene")
}
##Clean up col names
for(i in 1:length(raw_data)) {
temp <- gsub(pattern = "-GQReadsPerGene.out.tab",
replacement = "",
x = names(raw_data[[i]]),
fixed = TRUE)
colnames(raw_data[[i]]) <- temp
remove(temp)
}
# ####Median Filtering####
# ##set threshold - For no median filtering, median_thrs <- 0
# median_thrs <- 5
# ##Remove genes that do not meet median threshold
# raw_data_median_filtered <- list()
# for(i in chemnames) {
#   raw_data_median_filtered[[i]] <- raw_data[[i]] %>%
#     mutate(count_median = apply(raw_data[[i]], 1, median)) %>%
#     filter(count_median >= median_thrs) %>%
#     select(-count_median)
# }
####Combined all the data together####
for(i in 1:length(raw_data)) {
raw_data[[i]] <- raw_data[[i]] %>%
rownames_to_column("gene")
}
my_merge <- function(df1, df2) {
merge(df1, df2, by = "gene", all = TRUE)
}
combined_raw_data <- Reduce(my_merge, raw_data) %>%
remove_rownames() %>%
column_to_rownames("gene")
test1 <- t(combined_raw_data)
tempdf <- as.matrix(chemdosegroups)
View(tempdf)
test1 <- data.frame(tempdf, test1)
View(test1)
temp1 <- t(combined_raw_data)
tempdf <- as.matrix(chemdosegroups)
test1 <- data.frame(tempdf, temp1)
test1 <- data.frame(tempdf, temp1) %>%
column_to_rownames()
test1 <- data.frame(tempdf, temp1) %>%
column_to_rownames(tempdf)
test2 <- column_to_rownames(test1, "tempdf")
####edgeR TMM Norm####
testDGE <- DGEList(counts = combined_data_median_filtered,
group = dosechemgroups,
genes = as.data.frame(row.names(combined_data_median_filtered)) %>%
rename(genes = "row.names(combined_data_median_filtered)")
)
test2 <- column_to_rownames(test1, "tempdf")
row.names(test1) <-NULL
View(temp1)
View(test1)
test2 <- column_to_rownames(test1, "tempdf")
####Libraries####
library(tidyverse)
library(edgeR)
library(preprocessCore) # for quantile normalization
library(PMCMRplus)  # for Williams Trend Test
library(purrr)
library(ggfortify)
####Import metadata####
metadata <- read.csv("metadata.csv")
colnames(metadata) <- c("Chemical","10-1","10-2","10-3","10-4","10-5","3uM","Control")
chemnames <- metadata[1:6,1]
doses <- colnames(metadata[,2:8])
####Grouping####
##Chemical Groups
chemgroups <- c()
for(i in 1:length(chemnames)) {
temp1 <- rowSums(metadata[i,2:8])
temp2 <- rep(chemnames[i], temp1)
chemgroups <- c(chemgroups, temp2)
remove(temp1, temp2)
}
##Dose Groups
dosegroups <- c()
for(i in 1:length(chemnames)) {
temp1 <- as.numeric(metadata[i,2:8])
temp2 <- rep(doses, temp1)
dosegroups <- c(dosegroups, temp2)
remove(temp1, temp2)
}
##Dose and Chemical Groups Combined
chemdosegroups <- paste(chemgroups, dosegroups, sep = "-")
####Data Import####
raw_data <- list ()
for(i in chemnames) {
filenames <- list.files(paste0(i))
for(j in filenames){
raw_data[[i]][[j]] <- read.table(paste0(i,"/",j),
header = FALSE,
stringsAsFactors = FALSE,
sep = "\t",
strip.white = TRUE) [-c(1:4),-c(2:3)]
colnames(raw_data[[i]][[j]]) <- c("gene", j)
}
}
####Adjust row and col names####
##Set gene col as row names
for(i in 1:length(raw_data)) {
raw_data[[i]] <- raw_data[[i]] %>%
reduce(left_join, by = "gene") %>%
remove_rownames() %>%
column_to_rownames("gene")
}
##Clean up col names
for(i in 1:length(raw_data)) {
temp <- gsub(pattern = "-GQReadsPerGene.out.tab",
replacement = "",
x = names(raw_data[[i]]),
fixed = TRUE)
colnames(raw_data[[i]]) <- temp
remove(temp)
}
# ####Median Filtering####
# ##set threshold - For no median filtering, median_thrs <- 0
# median_thrs <- 5
# ##Remove genes that do not meet median threshold
# raw_data_median_filtered <- list()
# for(i in chemnames) {
#   raw_data_median_filtered[[i]] <- raw_data[[i]] %>%
#     mutate(count_median = apply(raw_data[[i]], 1, median)) %>%
#     filter(count_median >= median_thrs) %>%
#     select(-count_median)
# }
####Combined all the data together####
for(i in 1:length(raw_data)) {
raw_data[[i]] <- raw_data[[i]] %>%
rownames_to_column("gene")
}
my_merge <- function(df1, df2) {
merge(df1, df2, by = "gene", all = TRUE)
}
combined_raw_data <- Reduce(my_merge, raw_data) %>%
remove_rownames() %>%
column_to_rownames("gene")
temp1 <- t(combined_raw_data)
temp1 <- t(combined_raw_data)
tempdf <- as.matrix(chemdosegroups)
test1 <- data.frame(tempdf, temp1)
View(test1)
temp1 <- t(combined_raw_data)
grouping <- as.matrix(chemdosegroups)
test1 <- data.frame(grouping, temp1)
View(test1)
temp1 <- t(combined_raw_data)
grouping <- as.factor(chemdosegroups)
temp1 <- t(combined_raw_data)
grouping <- as.factor(chemdosegroups)
test1 <- data.frame(grouping, temp1)
test1 %>% group_keys()
grouped_data <- test1 %>% group_by(grouping)
View(grouped_data)
print(grouped_data)
list_data <- split(grouped_data, grouped_data$grouping)
View(list_data)
View(list_data)
temp1 <- t(combined_raw_data)
grouping <- as.factor(chemdosegroups)
test1 <- data.frame(grouping, temp1)
grouped_data <- test1 %>% group_by(grouping) %>% t()
View(grouped_data)
seperated_data <- split(grouped_data, grouped_data$grouping)
temp1 <- t(combined_raw_data)
grouping <- as.factor(chemdosegroups)
test1 <- data.frame(grouping, temp1)
grouped_data <- test1 %>% group_by(grouping)
seperated_data <- split(grouped_data, grouped_data$grouping)
View(seperated_data)
View(seperated_data)
seperated_data[[1]]
view(seperated_data[[1]])
i in seperated_data
for(i in seperated_data) {
print(i)
}
?apply
?lapply
print(2:length(metadata))
?add_row
?colwise
?across
?apply
for(i in seperated_data) {
seperated_data[[i]]$medianvalue = apply(seperated_data[[i]], 2, median)
}
?lapply
View(raw_data)
ncol(seperated_data[[1]])
nrow(seperated_data[[1]])
nrow(seperated_data[[1]])+1
for(i in seperated_data) {
j <- nrow(seperated_data[[i]])+1
seperated_data[[i]][[j]] = apply(seperated_data[[i]], 2, median)
}
for(i in seperated_data) {
j <- nrow(seperated_data[[i]])+1
seperated_data[[i]][[j]] = lapply(seperated_data[[i]], 2, median)
}
View(seperated_data)
test3 <- lapply(seperated_data, 2, median)
test3 <- lapply(seperated_data, median)
test3 <- lapply(seperated_data, t())
temp1 <- t(combined_raw_data)
grouping <- as.factor(chemdosegroups)
test1 <- data.frame(grouping, temp1)
grouped_data <- test1 %>% group_by(grouping)
seperated_data <- split(grouped_data, grouped_data$grouping)
View(seperated_data)
test2 <- apply(seperated_data[[1]], 2, median)
View(seperated_data)
View(grouped_data)
grouping <- as.factor(chemdosegroups)
chemical <- as.factor(chemgroups)
dose <- as.factor(dosegroups)
test1 <- data.frame(sample = grouping, temp1)
test1 <- data.frame(sample = grouping, chemical, dose, temp1)
head(test1)
View(test1)
grouped_data <- test1 %>% group_by(chemical, dose)
print(grouped_data)
test1 <- data.frame(chemical, dose, temp1)
grouped_data <- test1 %>% group_by(chemical, dose)
summary_data <- grouped_data %>% summarise()
View(summary_data)
summary_data <- grouped_data %>% summarise(median)
?summarize
summary_data <- grouped_data %>% summarise_all(median)
?summarize_all
?across
?colwise
summary_data <- grouped_data %>% summarise_all(median = median)
summary_data <- grouped_data %>% summarise_all(median = median.)
summary_data <- grouped_data %>% summarise_all(median = median(.))
grouped_data(,3)
grouped_data[,3]
grouped_data[,3] %>% median()
temp1 <- as.numeric(t(combined_raw_data))
grouping <- as.factor(chemdosegroups)
chemical <- as.factor(chemgroups)
dose <- as.factor(dosegroups)
test1 <- data.frame(chemical, dose, temp1)
grouped_data <- test1 %>% group_by(chemical, dose)
grouped_data[,3]
View(grouped_data)
temp1 <- as.numeric(t(combined_raw_data))
grouping <- as.factor(chemdosegroups)
chemical <- as.factor(chemgroups)
dose <- as.factor(dosegroups)
test1 <- data.frame(chemical, dose, temp1)
grouped_data <- test1 %>% group_by(chemical, dose)
View(grouped_data)
temp1 <- as.numeric(t(combined_raw_data))
View(combined_raw_data)
temp1 <- t(combined_raw_data)
temp2 <- mutate_all(temp1, function(x) as.numeric(as.character(x)))
temp1 <- t(combined_raw_data)
grouping <- as.factor(chemdosegroups)
chemical <- as.factor(chemgroups)
dose <- as.factor(dosegroups)
test1 <- data.frame(chemical, dose, temp1)
grouped_data <- test1 %>% group_by(chemical, dose)
summary_data <- grouped_data %>% summarise_all(median)
View(summary_data)
View(seperated_data)
View(summary_data)
View(summary_data)
View(test1)
View(summary_data)
summary_data_trimmed <- summary_data %>%
select(-chemical,
-dose)
library(tidyverse)
library(edgeR)
library(preprocessCore) # for quantile normalization
library(PMCMRplus)  # for Williams Trend Test
library(purrr)
library(ggfortify)
summary_data_trimmed <- summary_data %>%
select(-chemical,
-dose)
View(summary_data_trimmed)
summary_data_trimmed <- summary_data %>%
mutate(grouping = grouping)
summary_data_trimmed <- summary_data %>%
summarise_all(min)
View(summary_data_trimmed)
summary_data_trimmed <- summary_data %>%
select(-chemical,
-dose)
summary_data_trimmed <- summary_data %>%
select(-chemical,
-dose) %>%
select(-chemical)
summary_data_trimmed <- summary_data %>%
data.frame()
select(-chemical,
-dose) %>%
summarise_all(min)
summary_data_trimmed <- summary_data %>%
data.frame() %>%
select(-chemical,
-dose) %>%
summarise_all(min)
View(summary_data_trimmed)
View(summary_data)
View(temp1)
test2 <- rbind(temp1, summary_data_trimmed)
View(test2)
rm(test2)
temp2 <- rbind(temp1, summary_data_trimmed)
temp2 <- rbind(temp1, min_median = summary_data_trimmed)
View(temp2)
?df
medianthrs <- 5
cond <- min_median >= medianthrs
temp2["min_median"]
temp2[,"min_median"]
temp2[,"min_median",]
temp2["min_median",]
cond <- temp2[min_median,] >= medianthrs
temp3 <- temp2[, min_median >= medianthrs]
?subset
temp2 <- rbind(min_median = summary_data_trimmed, temp1)
View(temp2)
temp2 <- t(rbind(min_median = summary_data_trimmed, temp1))
View(temp2)
medianthrs <- 5
temp3 <- temp2 %>%
min_median >= medianthrs
temp3 <- temp2 %>%
filter(min_median >= medianthrs)
temp3 <- temp2 %>%
data.frame() %>%
filter(min_median >= medianthrs)
View(temp3)
temp3 <- temp2 %>%
data.frame() %>%
filter(min_median >= medianthrs) %>%
select(-min_median)
View(temp3)
